package hh.harkkas23v01.domain;

import java.util.List;

import com.fasterxml.jackson.annotation.JsonIgnore;

import jakarta.persistence.CascadeType;
import jakarta.persistence.Entity;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.GenerationType;
import jakarta.persistence.Id;
import jakarta.persistence.JoinColumn;
import jakarta.persistence.ManyToOne;
import jakarta.persistence.OneToMany;
import jakarta.validation.constraints.NotEmpty;
import jakarta.validation.constraints.PositiveOrZero;

//import jakarta.validation.constraints.Size;

@Entity
public class Article {
	@Id
	//@GeneratedValue(strategy=GenerationType.AUTO) //h2
	@GeneratedValue(strategy=GenerationType.IDENTITY) //mariadb
	private long id;
	
	@NotEmpty(message = "Anna myytävälle kohteelle kuvaus!")
	//@Size(min = 1, max = 300)
	private String description;
	
	@NotEmpty(message = "Anna ilmoituksen julkaisijan nimi!")
	//@Size(min = 1, max = 100)
	private String publisher;	
	
	private String dateadded;	

	@PositiveOrZero(message = "Tuotteen hinta on oltava 0 tai enemmän!")
	private double price;
	
    @ManyToOne
    @JoinColumn(name = "cityid")
    private City city;	 //<-----------Tämän pitää olla sama kuin City.javassa mappedBy = "city"
    
    
    @ManyToOne
    @JoinColumn(name = "applicationuserid")
    @JsonIgnore //lisätty 6.11
    private ApplicationUser applicationuser;	 //<-----------Tämän pitää olla sama kuin ApplicationUser.javassa mappedBy = "applicationuser"
    
    @OneToMany(cascade = CascadeType.ALL, mappedBy = "book") //MappedByn pitää olla sama kuin Comment.javassa private Article book
    @JsonIgnore        
    private List<Comment> comments;
    

	
	public Article() {} // HUOM, tarkkana constructoreiden kanssa!
	

	public Article(String description, String publisher, String dateadded, int publicationYear, double price) {
		super();
		this.description = description;
		this.publisher = publisher;
		this.dateadded = dateadded;
		this.price = price;
	}
	
	public Article(String description, String publisher, String dateadded, int publicationYear, double price, City city) {
		super();
		this.description = description;
		this.publisher = publisher;
		this.dateadded = dateadded;
		this.price = price;
		this.city = city;
	}
	
	


	public Article(long id, @NotEmpty(message = "Anna myytävälle kohteelle kuvaus!") String description,
			@NotEmpty(message = "Anna ilmoituksen julkaisijan nimi!") String publisher, String dateadded,
			double price, City city, ApplicationUser applicationuser) {
		super();
		this.id = id;
		this.description = description;
		this.publisher = publisher;
		this.dateadded = dateadded;
		this.price = price;
		this.city = city;
		this.applicationuser = applicationuser;
	}


	
	
	
	public List<Comment> getComments() {
		return comments;
	}


	public void setComments(List<Comment> comments) {
		this.comments = comments;
	}


	public ApplicationUser getApplicationuser() {
		return applicationuser;
	}


	public void setApplicationuser(ApplicationUser applicationuser) {
		this.applicationuser = applicationuser;
	}


	public City getCity() {
		return city;
	}
	public void setCity(City city) {
		this.city = city;
	}
	
	public long getId() {
		return id;
	}
	public void setId(long id) {
		this.id = id;
	}
	public String getDescription() {
		return description;
	}
	public void setDescription(String description) {
		this.description = description;
	}
	public String getPublisher() {
		return publisher;
	}
	public void setPublisher(String publisher) {
		this.publisher = publisher;
	}
	public String getDateadded() {
		return dateadded;
	}
	public void setDateadded(String dateadded) {
		this.dateadded = dateadded;
	}

	public double getPrice() {
		return price;
	}
	public void setPrice(double price) {
		this.price = price;
	}
	
	
	
	

	
	
	

}
